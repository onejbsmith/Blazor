@page "/optionQuotes"
@using BlazorTrader.Pages

@using BlazorTrader.Data
@using BlazorTrader.Components

@inject TDAApiService OptionsService

<div style="position:relative;top:-10px">
    <h3><span class="teal">Credit</span> Spreads<StatusBar optionQuotes="TDA.quotes" /></h3><OptionsSelector />
</div>

@if (TDA.quotes == null)
{<p><em>Loading since @TDANotifications._currentDateTime...</em></p> }
else if (TDA.quotes.underlying != null)
{
<div style='@(TDAParameters.showUnderlying?"":"display:none")'><Underlying optionQuotes="TDA.quotes" prevOptionQuotes="TDA.prevQuotes" /></div>

<div style="position:relative;top:-15px;left:500px;z-index:1000;">
    <SpreadSelector />
</div>
<div style="position:relative;top:-40px;">
    <RadzenTabs Style="zoom:90%">
        <Tabs>
            <RadzenTabsItem Text="@TDA.optionsDate(false)" Icon="arrow_upward">
                <OptionsTable lstOptions="TDA.callOptions" prevOptions="TDA.prevCallOptions" otmOptions="TDA.otmCallOptions" />
            </RadzenTabsItem>
            <RadzenTabsItem Text="@TDA.optionsDate(true)" Icon="arrow_downward">
                <OptionsTable lstOptions="TDA.putOptions" prevOptions="TDA.prevPutOptions" otmOptions="TDA.otmPutOptions" />
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</div>
<div>
    <input type="text" value="@TDANotifications.errorMessage" readonly="true" />
</div>
}


@* PAGE HTML ENDS *@


@code {
    OptionQuotesMgr mgr = new OptionQuotesMgr();

    protected override async Task OnInitializedAsync()
    {
        //TDANotifications.pageName = "OPTION SPREADS";
        StateHasChanged();

        OptionsService._httpClient = new HttpClient();
        await TDAApiService.GetAuthenticationAsync();

        mgr.OptionsService = OptionsService;

        while (1 == 1)
        {
            TDA.prevQuotes = TDA.quotes;
            TDA.prevCallOptions = TDA.callOptions;
            TDA.prevPutOptions = TDA.putOptions;

            TimeSpan ts = await mgr.GetOptionQuotes();

            if (TDAParameters.inTheMoney)
                Console.WriteLine("");

            StateHasChanged();
            System.Threading.Thread.Sleep(50);
           // System.Threading.Thread.Sleep(2000 - ts.Milliseconds);
        }
    }


}

<style>
    .ui-splitbutton {
        background-color: transparent !important;
    }

    h3 {
        display: inline;
        float: right;
        position: relative;
        top: 10px;
        right: 20px;
    }

    .table td {
        padding: 0.5rem;
    }
</style>